Render Module
Window: make most of these into useful helper / optional functions.
Picking: render a 1x1 viewport, assign unique colours to each mesh, pull value out of render buffer.

Mesh Module
MD2: Check if numpy usage in MD2.py is actually slowing loading down.
OAI: Clean up OAI partially implemented code
UV_Generators: Add some more commenting, these can be complex.
UV_Generators: Split planar uv_generator into 2 classes, one that uses vertex position, another that uses vertex normals.

Scene Module
RenderNode: Remove as it does nothing.
RenderCallbackNode: Call a new callback when context is lost. This will prevent multiple initialisations for shared
callbacks.
SceneNode: add inheritance of scale down the scene graph.
SceneNode: add a bit more commenting, it's one of the more complex classes.
SceneNode: implement 'set_world_translation' / etc.
SceneNode: implement 'rotate_matrix'.
SceneNode: implement 'rotate_eulers'.
SceneNode: implement 'rotate_about_axis'.
3D text: test pyglet text and add wrappers if needed.
Collision: add AAbounding box
Collision: add bounding box
Collision: implement mouse ray casting into scene
Collision: object picking via AABB
Collision: object picking via BB
Collision: object picking via mesh
SceneManagement: implement octree
Lights: add light nodes
Textures: implement mipmaps

Unspecified module
Add shader support
Add shadow projections
